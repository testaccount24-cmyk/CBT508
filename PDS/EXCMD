  TITLE  'COMMAND PROCESSOR TO INVOKE CLISTS                      '
*
**********************************************************************
*  EXCMD:                                                            *
*     THIS COMMAND PROCESSOR WILL INVOKE THE CLIST PASSED IN THE     *
*     PARM STRING                                                    *
*     THE PROGRAM PERFORMS THE FOLLOWING TASKS:                      *
*     1. THE CPPL IS SAVED                                           *
*     2. THE TSOSERVICE ROUTINE PARAMETER LIST IS SET UP TO INDICATE *
*        A COMMAND IS TO BE EXECUTED.                                *
*     3. THE DATA IN THE CPPLBUF WLL BE MOVED TO                     *
*       THE COMMAND BUFFER AND PASSED TO THE TSOSERVICE ROUTINE.     *
*     4. THE TSOSERVICE ROUTINE IS CALLED.                           *
*     5. CONTROL IS PASSED BACK TO THE USER.                         *
*                                                                    *
*  MAINTENANCE:                                                      *
*     WRITTEN: 02/20/01 A.L.RICHARDS                                 *
*     MODELED AFTER THE 'PROFILE' PROGRAM FROM ROCKWELL INT.         *
*     MODIFICATION LIST:                                             *
*     @P001 -  XX/XX/XX X.X.XXXXXXX                                  *
*                                                                    *
**********************************************************************
         EJECT
**********************************************************************
*                                                                    *
*   R E G I S T E R   D E F I N I T I O N S                          *
*                                                                    *
**********************************************************************
*
**********************************************************************
*                REGISTER USAGE                                      *
*   R0         UNUSED                                                *
*   R1         CPPL (AT ENTRY)                                       *
*   R2         UNUSED                                                *
*   R3         CPPL ADDRESS                                          *
*   R4         CPPLCBUF                                              *
*   R5         WORK REGISTER                                         *
*   R6         WORK REGISTER                                         *
*   R7         WORK REGISTER                                         *
*   R8         UNUSED                                                *
*   R9         UNUSED                                                *
*   R10        UNUSED                                                *
*   R11        UNUSED                                                *
*   R12        PRIMARY BASE REGISTER                                 *
*   R13        SAVE AREA                                             *
*   R14        SYSTEM ROUTINE RETURN ADDRESS                         *
*   R15        BRANCH ADDRESS                                        *
**********************************************************************
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
**********************************************************************
*                                                                    *
*        H O U S E   K E E P I N G   A R E A                         *
*                                                                    *
**********************************************************************
*
EXCMD    CSECT
         USING EXCMD,R12              ADDRESSIBILITY OF CSECT
         SAVE  (14,12),T,EXCMD-&SYSDATE-&SYSTIME    SAVE CALLERS REGS
         LR    R12,R15                GET ENTRY POINT ADDRESS
         LA    R1,REGSAVE             ADDRESS OF SAVE AREA
         ST    R1,8(,R13)             CHAIN
         ST    R13,4(R1)                    WORK
         LR    R13,R1                           AREAS
         L     R1,4(0,R13)            RESTORE REG 0 AND 1
         LM    R0,R1,20(R1)                 FROM CALLERS SAVE AREA
         B     ROCKPROF               BRANCH TO START
**********************************************************************
*                                                                    *
*    P R O G R A M   R E T U R N   A R E A                           *
*                                                                    *
**********************************************************************
RETURN   DS    0H
         L     R15,RETCODE             GET COMMAND RETURN CODE
         L     R13,4(,R13)             GET OLD SAVE AREA ADDRESS
         L     R1,8(,R13)              GET WORK AREA ADDRESS
         RETURN (14,12),RC=(15)        RETURN TO CALLER
         EJECT
********************************************************************
*                                                                  *
*     MAIN PROCESSING AREA                                         *
*                                                                  *
********************************************************************
*
ROCKPROF EQU   *
         LR    R3,R1                   SAVE CPPL ADDRESS
         USING CPPL,R3                 CPPL ADDRESSABILITY
*** SETUP COMMAND BUFFER ***
         MVC   CMDBUF,SPACES           CLEAR BUFFER
         XC    FLAGS,FLAGS             CLEAR FLAGS
         MVI   ENVIRFLG,ISOLATED       X'00' ISOLATED ENVIRONMENT
         MVI   FUNCFLGS,CL_RX_05       X'05' COMMAND EXECUTION
*** GET PARAMETERS FROMM CPPL COMMAND BUFFER ***
         L     R4,CPPLCBUF             ADDRESS OF COMMAND BUFFER
         LH    R5,0(R4)                LENGTH OF BUFFER
         LH    R6,2(R4)                LENGTH OF COMMAND
         SH    R5,=H'4'                SUBTRACT HEADER
         SR    R5,R6                   SUBTRACT LENGTH OF COMMAND
         BZ    TSR                     IF ZERO, NO PARMETER PASSED
         LA    R6,4(R6)                LENGTH OF HEADER + CMD
         AR    R6,R4                   POINT TO PARAMETER
         LR    R7,R5                   POINT LENGTH IN R7
         AR    R7,R6                   ADD TO COMMAND ADDRESS
BLNKLOOP EQU   *
         BCTR  R5,0                    SUBTRACT 1 FROM CMD (FOR EXEC)
         BCTR  R7,0                    POINT TO END OF BUFFER
         CR    R7,R6                   COMPARE TO START
         BNH   TSR                     NO PARMS
         CLI   0(R7),X'40'             IS IT A BLANK
         BE    BLNKLOOP                CHECK PREVIOUS BYTE
*** MOVE PARAMETERS AND SET TO UPPERCASE ***
         EX    R5,MOVEPARM             MOVE IN PARAMETERS
         EX    R5,CASE                 COVERT TO UPPER CASE
*** TSO SERVICE ROUTINE CALL ***
         LA    R5,1(R5)                GET BACK ORIGINAL LL
         ST    R5,CMDLEN               SAVE LL
*        L     R5,CMDLEN
*        TPUT  CMDBUF,(R5)
TSR      EQU   *
         LA    R15,16                  CVT POINTER
         L     R15,0(,R15)             CVT ADDRESS
         USING CVT,R15
         L     R15,CVTTVT              TSR
         DROP  R15
         USING TSVT,R15
         L     R15,TSVTASF-TSVT(,R15)  ADDRESSABILITY
         DROP  R15
         CALL  (15),(FLAGS,CMDBUF,CMDLEN,RETCODE,RSNCODE,ABNDCODE),VL
         B     RETURN                  EXIT
         EJECT
********************************************************************
*                                                                  *
*     PROGRAM CONSTANTS                                            *
*                                                                  *
********************************************************************
*
MOVEPARM MVC   CMDBUF(0),0(R6)         GET PARMLIST
CASE     OC    CMDBUF(0),SPACES
SPACES   DC    256X'40'                LOTS OF SPACES
         EJECT
********************************************************************
*                                                                  *
*          WORKING STORAGE  USED  IN  THIS  PROGRAM                *
*                                                                  *
********************************************************************
*
REGSAVE  DS    9D              REGISTER SAVE
CMDLEN   DS    F                       LENGTH OF BUFFER
CMDBUF   DS    CL255
         DC    CL20'END OF COMMAND BUFFER'
RETCODE  DS    F               RETURN CODE FROM COMMAND
RSNCODE  DS    F               REASON CODE FROM COMMAND
ABNDCODE DS    F               ABEND CODE FROM COMMAND
* FLAG VALUES, SEE TSO/E PROGRAMMING SERVICES
*                  TOS/E SERVICE FACILITY 'IKJEFTSR'
FLAGS    DS    0F              TSR FLAGS
FLAG1    DS    X               X'00'
ENVIRFLG DS    X
ISOLATED EQU   X'00'           FOR AUTHORIZED PGMS
UNISOLAT EQU   X'01'           FOR UNAUTHORIZED PGMS
ABENDFLG DS    X               X'01' CAUSES DUMP IF ABEND
FUNCFLGS DS    X               X'01' CAUSES COMMAND TO BE EXECUSTED
CL_RX_01 EQU   X'01'           INVOKE A CLIST OR REXX AND
*                              IF ENVIRFLG = '00' (ISOLATED)
*                              NOT RUN IMMEDIATELY BEFORE RETURN
*                              OR
*                              IF ENVIRFLG = '01' (UNISOLATED)
*                              RUN IMMEDIATELY BEFORE RETURN
CL_RX_05 EQU   X'05'           INVOKE A CLIST OR REXX AND
*                              IF ENVIRFLG = '00' (UNISOLATED)
*                              RUN IMMEDIATELY BEFORE RETURN
PGM      EQU   X'02'           INVOKE PROGRAM
         SPACE 5
         LTORG
         SPACE 5
********************************************************************
*                                                                  *
*          MAPPING MACROS USED  IN  THIS  PROGRAM                  *
*                                                                  *
********************************************************************
*
         PRINT GEN
         CVT   DSECT=YES
         SPACE 2
         IKJCPPL
         SPACE 2
         IKJTSVT
         SPACE 5
